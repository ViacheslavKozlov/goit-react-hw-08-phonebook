{"version":3,"sources":["Components/PhonebookList/PhonebookList.module.css","Components/PhonebookListHeadline/PhonebookListHeadline.module.css","Components/PhonebookSearch/PhonebookSearch.module.css","Components/PhonebookHeadline/PhonebookHeadline.module.css","Components/PhonebookForm/PhonebookForm.module.css","redux/phoneBook/actions.js","redux/phoneBook/reducers.js","redux/store.js","redux/phoneBook/operations.js","redux/phoneBook/selectors.js","Components/PhonebookForm/PhonebookForm.js","Components/PhonebookHeadline/PhonebookHeadline.js","Components/PhonebookList/PhonebookList.js","Components/PhonebookListHeadline/PhonebookEmptyListHeadline.js","Components/PhonebookListHeadline/PhonebookListHeadline.js","Components/PhonebookSearch/PhonebookSearch.js","Components/App.js","index.js"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","changeFilter","contactsReducer","createReducer","_","payload","state","alert","filter","contact","id","filterReducer","rootReducer","combineReducers","contacts","store","configureStore","reducer","devTools","process","axios","defaults","baseURL","getContacts","getVisibleContacts","createSelector","normilizedFilter","toLowerCase","name","includes","PhonebookForm","useState","setName","number","setNumber","dispatch","useDispatch","onSubmit","getState","some","post","then","data","catch","error","addContact","handleChange","evt","target","value","className","style","formWarpper","preventDefault","formInputWarpper","lableName","htmlFor","inputField","type","autoComplete","onChange","pattern","title","required","formBtn","PhonebookHeadline","phonebookHeadline","PhonebookList","filteredContacts","useSelector","deleteBtnHandler","delete","listWrapper","map","listItem","listItemdData","href","listItemBtn","onClick","PhonebookEmptyListHeadline","phonebookListHeadline","PhonebookListHeadline","PhonebookSearch","searchLabel","actions","currentTarget","App","useEffect","get","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc381885.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listWrapper\":\"PhonebookList_listWrapper__37B2H\",\"listItem\":\"PhonebookList_listItem__25aoD\",\"listItemdData\":\"PhonebookList_listItemdData__1J2fK\",\"listItemBtn\":\"PhonebookList_listItemBtn__1KPyJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookListHeadline\":\"PhonebookListHeadline_phonebookListHeadline__1tNls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchLabel\":\"PhonebookSearch_searchLabel__1hBcI\",\"formWarpper\":\"PhonebookSearch_formWarpper__2PpnA\",\"inputField\":\"PhonebookSearch_inputField__2uFOK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookHeadline\":\"PhonebookHeadline_phonebookHeadline__39_Sj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWarpper\":\"PhonebookForm_formWarpper__oRuB6\",\"formInputWarpper\":\"PhonebookForm_formInputWarpper__2nj9T\",\"lableName\":\"PhonebookForm_lableName__1O-rh\",\"inputField\":\"PhonebookForm_inputField__1eQgy\",\"formBtn\":\"PhonebookForm_formBtn__3YbuP\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const getContactsRequest = createAction(\"contacts/getContactsRequest\");\nexport const getContactsSuccess = createAction(\"contacts/getContactsSuccess\");\nexport const getContactsError = createAction(\"contacts/getContactsError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const delContactRequest = createAction(\"contacts/delContactRequest\");\nexport const delContactSuccess = createAction(\"contacts/delContactSuccess\");\nexport const delContactError = createAction(\"contacts/delContactError\");\n\nexport const changeFilter = createAction(\"contacts/filter\");\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\nimport { addContactSuccess, addContactError, getContactsSuccess, delContactSuccess, changeFilter } from \"./actions\";\n\nconst contactsReducer = createReducer([], {\n  [getContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [addContactError]: addContactErrFunc,\n  [delContactSuccess]: delContactFunc\n});\n\nconst filterReducer = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload\n});\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer\n});\n\n// function addContactFunc(state, { payload }) {\n//   if (state.some(contact => contact.name.toLocaleLowerCase() === payload.name.toLocaleLowerCase())) {\n//     alert(`${payload.name} is alredy exist`);\n//     return state;\n//   }\n//   return [...state, payload];\n// }\n\nfunction addContactErrFunc(_, { payload }) {\n  alert(payload);\n}\n\nfunction delContactFunc(state, { payload }) {\n  return state.filter(contact => contact.id !== payload);\n}\n\nexport default rootReducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"../redux/phoneBook/reducers\";\n\nconst store = configureStore({\n  reducer: { contacts: rootReducer },\n  devTools: process.env.NODE_ENV === \"development\"\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store };\n","import axios from \"axios\";\nimport {\n  getContactsRequest,\n  getContactsSuccess,\n  getContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  delContactRequest,\n  delContactSuccess,\n  delContactError\n} from \"./actions\";\n\naxios.defaults.baseURL = \"http://localhost:3030\";\n\nexport const addContact = ({ name, number }) => (dispatch, getState) => {\n  const contact = { name, number };\n  // console.log(store);\n\n  const contacts = getState().contacts.contacts;\n\n  if (contacts?.some(contact => contact.name === name)) {\n    return dispatch(addContactError(`${name} is exist`));\n  }\n  dispatch(addContactRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(delContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(delContactSuccess(id)))\n    .catch(error => dispatch(delContactError(error)));\n};\n\nexport const getContact = () => dispatch => {\n  dispatch(getContactsRequest());\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(getContactsSuccess(data)))\n    .catch(error => dispatch(getContactsError(error)));\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = state => state.contacts.contacts;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normilizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normilizedFilter));\n  }\n);\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from \"../../redux/phoneBook/operations\";\nimport style from \"./PhonebookForm.module.css\";\n\nexport default function PhonebookForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n  const onSubmit = contact => dispatch(addContact(contact));\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit({ name, number });\n    resetForm();\n  };\n\n  return (\n    <form className={style.formWarpper} onSubmit={handleSubmit}>\n      <div className={style.formInputWarpper}>\n        <label className={style.lableName} htmlFor=\"name\">\n          Name\n          <input\n            className={style.inputField}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            autoComplete=\"off\"\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n      </div>\n      <div className={style.formInputWarpper}>\n        <label className={style.lableName} htmlFor=\"number\">\n          Number\n          <input\n            className={style.inputField}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            autoComplete=\"off\"\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n      </div>\n      <button className={style.formBtn} type=\"submit\">\n        Add contact to phonebook\n      </button>\n    </form>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./PhonebookHeadline.module.css\";\n\nconst PhonebookHeadline = ({ title }) => {\n  return <h3 className={style.phonebookHeadline}>{title}</h3>;\n};\n\nPhonebookHeadline.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default PhonebookHeadline;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContact } from \"../../redux/phoneBook/operations\";\nimport { getVisibleContacts } from \"../../redux/phoneBook/selectors\";\nimport style from \"./PhonebookList.module.css\";\n\nexport default function PhonebookList() {\n  const dispatch = useDispatch();\n\n  const filteredContacts = useSelector(getVisibleContacts);\n\n  const deleteBtnHandler = contact => dispatch(deleteContact(contact.id));\n\n  return (\n    <>\n      <ul className={style.listWrapper}>\n        {filteredContacts.map(contact => (\n          <li className={style.listItem} key={contact.id}>\n            <span className={style.listItemdData}>\n              {contact.name}: <a href=\"tel:+{contact.number}\">{contact.number}</a>\n            </span>\n            <button className={style.listItemBtn} type=\"button\" onClick={() => deleteBtnHandler(contact)}>\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./PhonebookListHeadline.module.css\";\n\nconst PhonebookEmptyListHeadline = ({ title }) => {\n  return <h3 className={style.phonebookListHeadline}> {title} </h3>;\n};\n\nPhonebookEmptyListHeadline.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default PhonebookEmptyListHeadline;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./PhonebookListHeadline.module.css\";\n\nconst PhonebookListHeadline = ({ title }) => {\n  return <h3 className={style.phonebookListHeadline}>{title}</h3>;\n};\n\nPhonebookListHeadline.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default PhonebookListHeadline;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../redux/phoneBook/actions\";\nimport style from \"./PhonebookSearch.module.css\";\n\nconst PhonebookSearch = () => {\n  const value = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const onChange = evt => {\n    dispatch(actions.changeFilter(evt.currentTarget.value));\n  };\n\n  return (\n    <div className={style.formWarpper}>\n      <label className={style.searchLabel}>\n        Find contact by name\n        <input\n          className={style.inputField}\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n          autoComplete=\"off\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default PhonebookSearch;\n","// import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContact } from \"../redux/phoneBook/operations\";\nimport { getContacts } from \"../redux/phoneBook/selectors\";\nimport PhonebookForm from \"./PhonebookForm/PhonebookForm\";\nimport PhonebookHeadline from \"./PhonebookHeadline/PhonebookHeadline\";\nimport PhonebookList from \"./PhonebookList/PhonebookList\";\nimport PhonebookEmptyListHeadline from \"./PhonebookListHeadline/PhonebookEmptyListHeadline\";\nimport PhonebookListHeadline from \"./PhonebookListHeadline/PhonebookListHeadline\";\nimport PhonebookSearch from \"./PhonebookSearch/PhonebookSearch\";\n\nexport default function App() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => {\n      dispatch(getContact());\n    },\n    [dispatch]\n  );\n\n  return (\n    <>\n      <PhonebookHeadline title=\"Phonebook\" />\n      <PhonebookForm contacts={contacts} />\n      {contacts.length > 0 ? (\n        <>\n          <PhonebookListHeadline title=\"Contacts\" />\n          <PhonebookSearch />\n          <PhonebookList contacts={contacts} />\n        </>\n      ) : (\n        <>\n          <PhonebookEmptyListHeadline title=\"Ur phonebook is empty\" />\n        </>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}